<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eRewards.Services.Accounts.API</name>
    </assembly>
    <members>
        <member name="T:eRewards.Services.Accounts.API.Application.IntegrationEvents.AccountIntegrationEventService">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.AccountIntegrationEventService.#ctor(Microsoft.eShopOnContainers.BuildingBlocks.EventBus.Abstractions.IEventBus,eRewards.Services.Accounts.Infrastructure.AccountDbContext,System.Func{System.Data.Common.DbConnection,IntegrationEventLogEF.Services.IIntegrationEventLogService},Microsoft.Extensions.Logging.ILogger{eRewards.Services.Accounts.API.Application.IntegrationEvents.AccountIntegrationEventService})">
            <summary>
            
            </summary>
            <param name="eventBus"></param>
            <param name="accountContext"></param>
            <param name="integrationEventLogServiceFactory"></param>
            <param name="logger"></param>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.AccountIntegrationEventService.PublishThroughEventBusAsync(Microsoft.eShopOnContainers.BuildingBlocks.EventBus.Events.IntegrationEvent)">
            <summary>
            
            </summary>
            <param name="evt"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.AccountIntegrationEventService.SaveEventAndAccountContextChangesAsync(Microsoft.eShopOnContainers.BuildingBlocks.EventBus.Events.IntegrationEvent)">
            <summary>
            
            </summary>
            <param name="evt"></param>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Application.IntegrationEvents.EventHandling.ActionStatusChangedToAwaitingAccountValidationIntegrationEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.EventHandling.ActionStatusChangedToAwaitingAccountValidationIntegrationEventHandler.#ctor(eRewards.Services.Accounts.Domain.AccountsAggregate.IAccountRepository,Microsoft.Extensions.Logging.ILogger{eRewards.Services.Accounts.API.Application.IntegrationEvents.EventHandling.ActionStatusChangedToAwaitingAccountValidationIntegrationEventHandler},eRewards.Services.Accounts.API.Application.IntegrationEvents.IAccountIntegrationEventService)">
            <summary>
            
            </summary>
            <param name="accountRepository"></param>
            <param name="logger"></param>
            <param name="accountIntegrationEventService"></param>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.EventHandling.ActionStatusChangedToAwaitingAccountValidationIntegrationEventHandler.Handle(eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionStatusChangedToAwaitingAccountValidationIntegrationEvent)">
            <summary>
            
            </summary>
            <param name="event"></param>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.AccountValidationStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.AccountValidationStatus.NonFound">
            <summary>
            NonFound
            </summary>
        </member>
        <member name="F:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.AccountValidationStatus.Found">
            <summary>
            Found
            </summary>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionAccountValidationCompleteIntegrationEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionAccountValidationCompleteIntegrationEvent.AccountNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionAccountValidationCompleteIntegrationEvent.ActionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionAccountValidationCompleteIntegrationEvent.Status">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionAccountValidationCompleteIntegrationEvent.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="accountNo"></param>
            <param name="actionId"></param>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionAccountValidationCompleteIntegrationEvent.#ctor(System.Int32,System.Int32,eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.AccountValidationStatus)">
            <summary>
            
            </summary>
            <param name="accountId"></param>
            <param name="actionId"></param>
            <param name="status"></param>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionStatusChangedToAwaitingAccountValidationIntegrationEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionStatusChangedToAwaitingAccountValidationIntegrationEvent.AccountNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionStatusChangedToAwaitingAccountValidationIntegrationEvent.ActionId">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.Events.ActionStatusChangedToAwaitingAccountValidationIntegrationEvent.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="accountNo"></param>
            <param name="actionId"></param>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Application.IntegrationEvents.IAccountIntegrationEventService">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.IAccountIntegrationEventService.PublishThroughEventBusAsync(Microsoft.eShopOnContainers.BuildingBlocks.EventBus.Events.IntegrationEvent)">
            <summary>
            
            </summary>
            <param name="evt"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Application.IntegrationEvents.IAccountIntegrationEventService.SaveEventAndAccountContextChangesAsync(Microsoft.eShopOnContainers.BuildingBlocks.EventBus.Events.IntegrationEvent)">
            <summary>
            
            </summary>
            <param name="evt"></param>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Controllers.AccountsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.AccountsController.#ctor(eRewards.Services.Accounts.Domain.AccountsAggregate.IAccountRepository,Microsoft.Extensions.Logging.ILogger{eRewards.Services.Accounts.API.Controllers.AccountsController})">
            <summary>
            
            </summary>
            <param name="accountRepository"></param>
            <param name="logger"></param>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.AccountsController.CreateAccount(eRewards.Services.Accounts.Domain.AccountsAggregate.Account)">
            <summary>
            
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.AccountsController.UpdateAccount(eRewards.Services.Accounts.Domain.AccountsAggregate.Account)">
            <summary>
            
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.AccountsController.GetAccounts(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.AccountsController.GetAccount(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountNo"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.AccountsController.DeleteAccount(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountNo"></param>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Controllers.HomeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Controllers.HomeController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Extensions.IHostExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IHostExtensions.SeedDatabase(Microsoft.AspNetCore.Hosting.IWebHost)">
            <summary>
            
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions.AddAppInsights(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions.AddCustomDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions.AddIntegrationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions.AddEventBus(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Extensions.IServiceCollectionExtensions.AddGenerics(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly,System.Type)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="targetAssembly"></param>
            <param name="handlerInterface"></param>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Infrastructure.AutoFacModules.ApplicationModule">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Infrastructure.AutoFacModules.ApplicationModule.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Infrastructure.AutoFacModules.ApplicationModule.Load(Autofac.ContainerBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Infrastructure.AutoFacModules.MediatorModule">
            <summary>
            
            </summary>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Infrastructure.IntegrationEventMigrations.IntegrationEventLogContextDesignTimeFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Infrastructure.IntegrationEventMigrations.IntegrationEventLogContextModelSnapshot">
            <summary>
            
            </summary>
        </member>
        <member name="T:eRewards.Services.Accounts.API.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:eRewards.Services.Accounts.API.Program.CreateHostBuilder(Microsoft.Extensions.Configuration.IConfiguration,System.String[])">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:eRewards.Services.Accounts.API.ViewModel.PaginatedItemsViewModel`1">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:eRewards.Services.Accounts.API.ViewModel.PaginatedItemsViewModel`1.PageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.ViewModel.PaginatedItemsViewModel`1.PageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.ViewModel.PaginatedItemsViewModel`1.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:eRewards.Services.Accounts.API.ViewModel.PaginatedItemsViewModel`1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="M:eRewards.Services.Accounts.API.ViewModel.PaginatedItemsViewModel`1.#ctor(System.Int32,System.Int32,System.Int64,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="count"></param>
            <param name="data"></param>
        </member>
    </members>
</doc>
